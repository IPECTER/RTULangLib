plugins {
    id 'java'
}

group = 'com.github.ipecter.rtu'
version = '1.3.1'

ConfigurableFileTree libsImplementation = fileTree(dir: 'libs-implementation', include: ['*.jar'])

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = "https://jitpack.io"
    }
    maven {
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

}

configurations {
    extraLibs
}

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.19.2-R0.1-SNAPSHOT"
    compileOnly "net.kyori:adventure-platform-bukkit:4.2.0"
    compileOnly "org.apache.commons:commons-lang3:3.12.0"
    extraLibs libsImplementation
    implementation libsImplementation
}


def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
